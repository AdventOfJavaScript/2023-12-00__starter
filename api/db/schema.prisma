datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  password   String
  firstName  String
  lastName   String
  avatar     String
  createdAt  DateTime     @default(now())
  updateAt   DateTime     @updatedAt
  role       String
  UserStatus UserStatus[]
  Santa      Pairing[]    @relation("Santa")
  Person     Pairing[]    @relation("Person")
  Sender     ThankYou[]   @relation("Sender")
  Reciever   ThankYou[]   @relation("Reciever")
  WishList   WishList[]
}

// enum Role {
//   USER
//   ADMIN
// }

model Event {
  id           String       @unique
  name         String
  date         DateTime
  createdAt    DateTime     @default(now())
  updateAt     DateTime     @updatedAt
  sendReminder Boolean
  UserStatus   UserStatus[]
  Pairing      Pairing[]
  ThankYou     ThankYou[]
  WishList     WishList[]
}

model UserStatus {
  id      String @id
  event   Event? @relation(fields: [eventId], references: [id])
  eventId String
  user    User?  @relation(fields: [userId], references: [id])
  userId  Int    @unique
  status  String
}

// enum Status {
//   INVITED
//   DECLINED
//   ACCEPTED
// }

model Pairing {
  id         Int      @id @default(autoincrement())
  event      Event?   @relation(fields: [eventId], references: [id])
  eventId    String
  santaUser  User?    @relation("Santa", fields: [santaId], references: [id])
  santaId    Int
  personUser User?    @relation("Person", fields: [personId], references: [id])
  personId   Int
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt
}

model ThankYou {
  id        String   @id
  event     Event?   @relation(fields: [eventId], references: [id])
  eventId   String
  user      User?    @relation("Sender", fields: [userId], references: [id])
  userId    Int
  toUser    User?    @relation("Reciever", fields: [toUserId], references: [id])
  toUserId  Int
  message   String
  createdAt DateTime @default(now())
}

model WishList {
  id              Int      @id @default(autoincrement())
  name            String
  url             String
  user            User?    @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime @default(now())
  updateAt        DateTime @updatedAt
  order           Int
  event           Event?   @relation(fields: [eventId], references: [id])
  eventId         String
  siteImage       String
  siteTitle       String
  siteDescription String
}
